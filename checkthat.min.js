/* checkThat v0.1 */
(a=>{const b={defaults:{}},c={init(h){const j=d.build(h);h.data('checkthat',j),f.bind(j)},destroy(h){const i=h.data('checkthat');i.children().not(h).remove(),h.removeClass('.checkthat-input').unwrap('.checkthat')},controlInput(h,i=!1){let j=!0;return h.is('input[type="checkbox"]')||h.is('input[type="radio"]')||(console.error('checkThat | Invalid input type'),j=!1),i&&!h.closest('.checkthat').length&&(console.error('checkThat | Not initialized'),j=!1),j}},d={build(h){const j=h.attr('type');h.addClass('checkthat-input').wrap('<div class="checkthat checkthat-'+j+'"></div>');const k=h.closest('.checkthat'),l='checkbox'===j?'check':'circle';return k.append('<i class="checkthat-icon fas fa-'+l+'"></i>'),k}},f={bind(h){h.off('click.checkthat').on('click.checkthat',f.click)},click(h){const i=a(h.currentTarget),j=i.find('.checkthat-input');i.is('.checkthat-checkbox')?j.prop('checked',!j.is(':checked')):i.is('.checkthat-radio')&&j.prop('checked',!0),j.trigger('change')}},g={init(h){const i=a.extend(!0,{},b.defaults,h);return this.each((j,k)=>{const l=a(k);c.controlInput(l)&&c.init(l,i)})},destroy(){return this.each((h,i)=>{a(i);c.controlInput($input,!0)&&c.destroy($input)})}};a.fn.checkThat=function(h){if(!(1>this.length))return g[h]?g[h].apply(this,Array.prototype.slice.call(arguments,1)):'undefined'==typeof h||'object'==typeof h?g.init.apply(this,arguments):void console.error('checkThat | Invalid argument')}})(jQuery);